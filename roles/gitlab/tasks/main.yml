---
# tasks file for gitlab
- name: Check if GitLab configuration file already exists.
  stat: path=/etc/gitlab/gitlab.rb
  register: gitlab_config_file
  tags: gitlab

- name: Check if GitLab is already installed.
  stat: path=/usr/bin/gitlab-ctl
  register: gitlab_file
  tags: gitlab

# Install GitLab and its dependencies.
- name: Install GitLab dependencies.
  package:
    name: "{{ gitlab_dependencies }}"
    state: present
  become: true
  tags: gitlab

- name: Download GitLab repository installation script.
  get_url:
    url: "{{ gitlab_repository_installation_script_url }}"
    dest: /tmp/gitlab_install_repository.sh
    validate_certs: "{{ gitlab_download_validate_certs }}"
  become: true
  when: not gitlab_file.stat.exists
  tags: gitlab

- name: Install GitLab repository.
  command: bash /tmp/gitlab_install_repository.sh
  register: output
  become: true
  when: not gitlab_file.stat.exists
  tags: gitlab

- name: Define the Gitlab package name.
  set_fact:
    gitlab_package_name: "{{ gitlab_edition }}{{ gitlab_package_version_separator }}{{ gitlab_version }}"
  when: gitlab_version | default(false)
  
- name: configure dpkg
  command:
    cmd: dpkg --configure -a
  become: true

- name: Install GitLab
  package:
    name: "{{ gitlab_package_name | default(gitlab_edition) }}"
    state: present
  async: 600
  poll: 5
  become: true
  when: not gitlab_file.stat.exists
  tags: gitlab

# Start and configure GitLab. Sometimes the first run fails, but after that,
# restarts fix problems, so ignore failures on this run.
- name: Reconfigure GitLab (first run).
  command: >
    gitlab-ctl reconfigure
    creates=/var/opt/gitlab/bootstrapped
  become: true
  failed_when: false
  tags: gitlab

- name: Copy GitLab configuration file.
  template:
    src: "{{ gitlab_config_template }}"
    dest: /etc/gitlab/gitlab.rb
    owner: root
    group: root
    mode: 0600
  become: true
  notify: restart gitlab
  tags: gitlab
